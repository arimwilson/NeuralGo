package neural;

enum ActivationName {
  LINEAR = 0;
  RELU = 1;
  LOGISTIC = 2;
  TANH = 3;
  SOFTMAX = 4;  // TODO(ariw): Make this work.
}

message LayerConfiguration {
  // Activation function for this layer.
  optional ActivationName name = 1;
  // Number of neurons in this layer.
  optional int32 outputs = 2;
  // Weights for neurons x input synapses, initialized randomly if not provided.
  repeated double weight = 3;
}

enum ErrorName {
  MEAN_SQUARED = 0;
  CROSS_ENTROPY = 1;
}

message NetworkConfiguration {
  // Number of inputs to the network.
  optional int32 inputs = 1;
  // Description of each hidden layer and the output layer of the network.
  repeated LayerConfiguration layer = 2;
  // Which error function to use for training.
  optional ErrorName error_name = 3;  // TODO(ariw): Make this work.
}

message LearningConfiguration {
  // Number of times to iterate over training data.
  optional int32 epochs = 1;
  // Fixed learning rate.
  optional double rate = 2;
  // Weight decay rate (L2 regularization).
  optional double decay = 4;
  // Size of training batches. 0 for full batch training.
  optional int32 batch_size = 3;
}
